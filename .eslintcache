[{"E:\\Html-site\\React-Project\\todo\\src\\index.js":"1","E:\\Html-site\\React-Project\\todo\\src\\App.js":"2","E:\\Html-site\\React-Project\\todo\\src\\reportWebVitals.js":"3","E:\\Html-site\\React-Project\\todo\\src\\Todo.js":"4","E:\\Html-site\\React-Project\\todo\\src\\TodoList.js":"5","E:\\Html-site\\React-Project\\todo\\src\\Filter.js":"6"},{"size":500,"mtime":499162500000,"results":"7","hashOfConfig":"8"},{"size":2278,"mtime":1607625972682,"results":"9","hashOfConfig":"8"},{"size":362,"mtime":499162500000,"results":"10","hashOfConfig":"8"},{"size":1042,"mtime":1607705681895,"results":"11","hashOfConfig":"8"},{"size":1125,"mtime":1607705855194,"results":"12","hashOfConfig":"8"},{"size":580,"mtime":1607623880367,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"1p042ov",{"filePath":"17","messages":"18","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"16"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"E:\\Html-site\\React-Project\\todo\\src\\index.js",[],["28","29"],"E:\\Html-site\\React-Project\\todo\\src\\App.js",["30","31"],"import './App.css';\nimport './TodoList.css'\nimport React, {useState, useEffect} from 'react';\nimport { Button } from '@material-ui/core';\nimport Todo from './Todo';\nimport TodoList from './TodoList';\nimport Filter from './Filter.js';\n\nfunction App() {\n  const [inputText, setInputText] = useState(\"\");\n  const [todos, setTodos] = useState([]);\n  const [filterValue, setfilterValue] = useState(\"all\");\n  const [filteredTodos, setFilteredTodos] = useState([]);\n  const [showAddItem, setshowAddItem] = useState(false);\n\n  console.log(\"add\",showAddItem);\n\n  useEffect(() => {\n    getLocalTodos();\n  }, []);\n\n  useEffect(() => {\n      filterHandler();\n      saveLocalTodos();\n  }, [todos, filterValue]);\n\n  const filterHandler = () => {\n    switch(filterValue) {\n      case \"completed\":\n        setFilteredTodos(todos.filter((todo) => todo.completed === true));\n        break;\n      case \"uncompleted\":\n        setFilteredTodos(todos.filter((todo) => todo.completed === false));\n        break;\n      default:\n        setFilteredTodos(todos);\n        break;\n    }\n  }\n\n  const saveLocalTodos = () => {\n    localStorage.setItem(\"todos\", JSON.stringify(todos));\n  };\n\n  const getLocalTodos = () => {\n    if(localStorage.getItem(\"todos\") === null){\n      localStorage.setItem(todos, JSON.stringify([]));\n    }else {\n      let todoLocal = JSON.parse(localStorage.getItem(\"todos\"));\n      setTodos(todoLocal);\n    }\n  };\n\n  return (\n    <div className=\"app\">\n      <div className=\"app_body\">\n        <h1>Todo App</h1>\n          <Filter filterValue = {filterValue} setfilterValue = {setfilterValue}/>\n          <div className=\"todoContainer\">\n            <ul>  \n              {filteredTodos.map((todo) => (\n                  <TodoList key={todo.id} text={todo.text} todo = {todo} todos = {todos} setTodos={setTodos} completed={todo.completed}/>\n              ))}  \n            </ul>\n          </div>\n          { showAddItem && <Todo todos = {todos} inputText={inputText} setInputText = {setInputText} setTodos = {setTodos} filterValue = {filterValue} setfilterValue = {setfilterValue} setshowAddItem={setshowAddItem}/>}\n          <Button onClick={() => setshowAddItem(!showAddItem)}>{`${!showAddItem ? \"+ Add Item\" : \"Cancel\"}`}</Button>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","E:\\Html-site\\React-Project\\todo\\src\\reportWebVitals.js",[],"E:\\Html-site\\React-Project\\todo\\src\\Todo.js",["32","33","34"],"E:\\Html-site\\React-Project\\todo\\src\\TodoList.js",[],"E:\\Html-site\\React-Project\\todo\\src\\Filter.js",[],{"ruleId":"35","replacedBy":"36"},{"ruleId":"37","replacedBy":"38"},{"ruleId":"39","severity":1,"message":"40","line":20,"column":6,"nodeType":"41","endLine":20,"endColumn":8,"suggestions":"42"},{"ruleId":"39","severity":1,"message":"43","line":25,"column":6,"nodeType":"41","endLine":25,"endColumn":26,"suggestions":"44"},{"ruleId":"45","severity":1,"message":"46","line":2,"column":18,"nodeType":"47","messageId":"48","endLine":2,"endColumn":24},{"ruleId":"45","severity":1,"message":"49","line":2,"column":33,"nodeType":"47","messageId":"48","endLine":2,"endColumn":41},{"ruleId":"45","severity":1,"message":"50","line":21,"column":11,"nodeType":"47","messageId":"48","endLine":21,"endColumn":23},"no-native-reassign",["51"],"no-negated-in-lhs",["52"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getLocalTodos'. Either include it or remove the dependency array.","ArrayExpression",["53"],"React Hook useEffect has missing dependencies: 'filterHandler' and 'saveLocalTodos'. Either include them or remove the dependency array.",["54"],"no-unused-vars","'Select' is defined but never used.","Identifier","unusedVar","'MenuItem' is defined but never used.","'optionHandle' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"55","fix":"56"},{"desc":"57","fix":"58"},"Update the dependencies array to be: [getLocalTodos]",{"range":"59","text":"60"},"Update the dependencies array to be: [todos, filterValue, filterHandler, saveLocalTodos]",{"range":"61","text":"62"},[598,600],"[getLocalTodos]",[676,696],"[todos, filterValue, filterHandler, saveLocalTodos]"]